# Write your code below this line ðŸ‘‡
print("Hello world!")
print("hello" + " " + "sujal")
print("hello" + "sujal")
# + (String Concatenation)  ---> usually it prints code without a space and combines 2 different segments and makes them run together
# in python spaces means alot unlike c++





#debuging exersise

#Fix the code below ðŸ‘‡

print("Day 1 - String Manipulation")
print('String Concatenation is done with the "+" sign.')
print('e.g. print("Hello "+ "world")')
print("New lines can be created with a backslash and n.\n")







#input and output ðŸ‘‡
print("normal print statement -->")
print("what is your name?\n")
#  here there is no input colum for user we just made a statement asking for user input but not made a way to enter for him to enter a value into the statement.
# to take input we make a statement using input value
print("normal input statement -->")
input("what is your name ?\n")  
print("\n")
# when we enter the input it replace everything inside the input fuction with the resposnse
# it means that after taking the input what is your name was replaced by the value entered
# so if we do something like this
print("specific input resposnse statement -->")
print("\nresponse ==>\n hello " + input("what is your name ?\n"))







#inputing a function and using to solve a problem ðŸ‘‡

print("\n")

# how to make a function and read letters in name of person
print(len(input('What is your name?\n')))

#in this method we want to add a statement if in between execution of the  funcution a tracce back error is issued 
#so to avoid such thing we use variables 
print("\n")







#variables in python and trying to solve previous problem using it  ðŸ‘‡
name = input ("what is your name ?\n")
length=len(name)
print ("\nNo. of letters in name is ==>" )
print (length)
#in above case we couldnt add any line such asno of letters as the thing 
# not acceptable but when we add name as variable value is stored permanently till we change it again


# naming of the variables 
# 1 cant use key words
# 2 cant give spaces 
# 3 can use undersccore 
# 4 name should be meaning ful
# 5 can use numbers in name but not at the start of name 
